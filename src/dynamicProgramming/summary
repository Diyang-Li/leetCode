1. 确定dp数组（dp table）以及下标的含义
2. 确定递推公式 --> 确定状态，最后一步，然后化成子问题
3. dp数组如何初始化 --> 边界条件
4. 确定遍历顺序（背包问题特别考究）：一般来说， 都是从小到大，二位是从左到右，从小到大，和递归有点相反
5. 举例推导dp数组，print递归数组，如果有错误容易debug

best way to debug: print result
 1. 这道题目我举例推导状态转移公式了么？
 2. 我打印dp数组的日志了么？
 3. 打印出来了dp数组和我想的一样么？

 Category:
  1.计数型：多少种方式 62
           多少种方式选出k个数使得和是Sum: How many ways
  2. 最大值最小值（如：最长上升子序列） 322
  3. 存在性：能不能？谁获胜？

  f(0) = 0 常常用作初始条件
  without any repeat calculation

  常考的： 坐标类，序列类，双序列类


背包问题：应用类的题目
01 背包：n种物品，每种物品一个，每个物品有自己的重量和价值，一个重量为m的背包，能装多少
    暴力解法：2 ^ n
    step1: dp二维数组，[0,i]下标的物品，任意取放进容量为j的背包
        dp[i][j]
            先不放i，价值是dp[i-1][j]
            放物品i, 价值是dp[i-1][j-weight[i]] + value[i]
                          i-1:不放i的时候哪一行
                          j-weight(i):要匀出地方，放i
    step: initiate 2D array
 完全背包:


贪心算法：局部最优->全局最优
没有套路
