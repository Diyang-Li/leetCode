1. two sum HashMap<preSum, frequency/position>
    When using HashMap, put (0, -1) or (0,0) when <sum, position>
    1). sum: 525 560
    2). Modular arithmetic: 974 523
2. rangeSum
    1). 370 差分数组？？
3. sliding window :
    1). 862 VS 260: if all number are positive, the presum is increase, just use sliding window, wherear use monotonic queue
        to ensure the sum in the queue is increasing
4. monotonic queue


Template:
prefer:
       0 1 2  3  4  5 6
num = [1,2,3, 4, 5, 6,7]
sum = [1,3,6,10,15,21,28]

if sum[n,m] [3-5] = sum[5] - sum[2] ---> sum[m] - sum[n-1]
            [0-5] = sum[5] ---> sum[m]
   num[m] num[5] = sum[5]-sum[4] --> sum[m] - sum[m-1]
          num[0] = sum[0]