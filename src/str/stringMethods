1. String
    str.charAt();
    boolean str.isEmpty();
    str.toLowerCase();
    str.toUpperCase();
    str.trim(); The trim() method removes whitespace from both ends of a string and returns a new string,
                without modifying the original string
    str.equals(Object obj);
    boolean str.equalsIgnoreCase(String otherString);compares two strings, ignoring lower case and upper case differences.
    str.concat(String otherString); like "+"
    int str.compareTo(String otherString); compare lexicographically length
    str.substring(int beginIndex, int endIndex);[)
    boolean str.endWith(String suffix); end with some string
    boolean str.startWith(String suffix)/(String suffix, int index); start with some string
    boolean str.contains(CharSequence s);
    int str.indexOf(String str)/(String str, int fromIndex); return -1 when not find
    int str.lastIndexOf(String str)/(String str, int from index);returns the position of the last occurrence of specified character(s) in a string

    str.replace(char oldChar, char newChar)
    str.replace(CharSequence target, CharSequence replacements)

    String -> primary type: String.valueOf();
    String -> char[]: str.toCharArray();
    char[] -> String: new String(char[]);

    String and bytes[]:

2. StringBuffer
    sb.append();
    sb.delete(int start, int end);
    sb.deleteCharAt(int index);
    sb.replace(int start, int end, String str);
    sb.insert(int offset, char c); 0 <= offset <= length
    sb.reverse();
    sb.indexOf(String str);
    sb.subString(int start, int end);
    sb.length();
    char sb.charAt(int index);
    sb.setCharAt(int n, char c);

